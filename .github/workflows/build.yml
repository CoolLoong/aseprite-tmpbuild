name: build
on: [push, pull_request,workflow_dispatch]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        build_type: [RelWithDebInfo]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: seanmiddleditch/gha-setup-ninja@master
    - uses: ilammy/msvc-dev-cmd@v1
      if: runner.os == 'Windows'
    - name: Workaround for windows-2022 and cmake 3.25.0
      if: runner.os == 'Windows'
      shell: bash
      run: mv C:/Strawberry/ C:/fuckup.no/
    - name: Install Dependencies
      shell: bash
      run: |
        if [[ "${{ runner.os }}" == "Linux" ]] ; then
          sudo apt-get update -qq
          sudo apt-get install -y \
            libx11-dev libxcursor-dev libxi-dev
        fi
    - name: Get SKIA
      if: runner.os == 'Windows'
      run: |
        wget https://github.com/aseprite/skia/releases/download/m102-861e4743af/Skia-Windows-Release-x64.zip
        unzip Skia-Windows-Release-x64.zip -d libSKIA
    - name: Generating Makefiles
      shell: bash
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]] ; then
          export enable_ccache=off
        else
          export enable_ccache=on
        fi
        cmake -S . -B build -G Ninja \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DENABLE_TESTS=ON \
          -DLAF_BACKEND=skia \
          -DSKIA_DIR=.\libSKIA \
          -DSKIA_LIBRARY_DIR=.\libSKIA\out\Release-x64 \
          -DSKIA_LIBRARY=.\libSKIA\out\Release-x64\skia.lib \
          -DENABLE_CCACHE=$enable_ccache
    - name: Cache third-party
      uses: actions/cache@v3
      with:
        key: 3pt-b
        restore-keys: 3pt-b
        path: build/third_party/*/*.obj
    - name: Cache third-party r
      uses: actions/cache@v3
      with:
        key: 3pt
        path: third_party/*/*.obj
    - name: Cache laf
      uses: actions/cache@v3
      with:
        key: laf-b
        restore-keys: laf-b
        path: build/laf/*/*.obj
    - name: Cache laf r
      uses: actions/cache@v3
      with:
        key: laf
        path: laf/*/*.obj
    - name: Cache objs
      uses: actions/cache@v3
      with:
        key: arc-cmobj
        path: ./*/src/app/CMakeFiles/*/*.obj
    - name: Cache objs2
      uses: actions/cache@v3
      with:
        key: arc-cmobj-r
        path: src/app/CMakeFiles/*/*.obj
    - name: Compiling
      shell: bash
      run: |
        cd build && ninja -j 4
    - name: artifacts al build/
      uses: actions/upload-artifact@v3
      with:
          name: build_outs
          path: build/bin/*asep*exe
    - name: artifact build/data dir
      uses: actions/upload-artifact@v3
      with:
          name: prog_data
          path: build/bin/data/*

